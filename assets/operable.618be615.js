import{_ as e}from"./_plugin-vue_export-helper.c27b6911.js";import{o as a,c as t,f as c}from"./entry.d2b0aafe.js";const o={},s={class:"my-5 rounded"},i=c('<h2 class="font-bold text-xl mb-2 text-gray-700 text-center dark:text-white" data-v-4ec205cf>Operable</h2><div data-v-4ec205cf><div class="px-1 mx-1 py-2" data-v-4ec205cf><nav class="accordion arrows" data-v-4ec205cf><input type="radio" name="accordion" id="cb1" data-v-4ec205cf><section class="box" data-v-4ec205cf><label class="box-title dark:text-slate-900" for="cb1" style="width:100%;" data-v-4ec205cf>Guideline 2.1 Keyboard Accessible</label><label class="box-close" for="acc-close" data-v-4ec205cf></label><div class="box-content m-2" data-v-4ec205cf><span class="text-gray-700" data-v-4ec205cf> Make all functionality available from a keyboard.</span><ul class="text-gray-700 mt-5" data-v-4ec205cf><li data-v-4ec205cf> Some people use specialized keyboards with ergonomic layouts, on-screen keyboards, or switch devices. Others use the keyboard through speech input or other means of interaction, such as brain computer interfaces. </li><li data-v-4ec205cf> For example, when activating a dialog box, the focus may remain on the initial content that is not visible anymore, or close button for the dialog box may not be reachable via keyboard. In such cases, the user is &quot;trapped.&quot; </li><li data-v-4ec205cf> The example below shows a website with a clearly visible focus around the currently selected link in the list. Ideally, the focus will remain visible and will move in a logical order from one link to the next. </li></ul></div></section><input type="radio" name="accordion" id="cb2" data-v-4ec205cf><section class="box" data-v-4ec205cf><label class="box-title dark:text-slate-900" for="cb2" style="width:100%;" data-v-4ec205cf>Guideline 2.2 Enough Time</label><label class="box-close" for="acc-close" data-v-4ec205cf></label><div class="box-content m-2" data-v-4ec205cf><span class="text-gray-700" data-v-4ec205cf> Provide users enough time to read and use content.</span><ul class="text-gray-700 mt-5" data-v-4ec205cf><li data-v-4ec205cf> In this example carousel component there is a button to stop the movement, and other controls to allow users to navigate through the items at their own pace: </li></ul></div></section><input type="radio" name="accordion" id="cb3" data-v-4ec205cf><section class="box" data-v-4ec205cf><label class="box-title dark:text-slate-900" for="cb3" style="width:100%;" data-v-4ec205cf>Guideline 2.3 Seizures</label><label class="box-close" for="acc-close" data-v-4ec205cf></label><div class="box-content m-2" data-v-4ec205cf><span class="text-gray-700" data-v-4ec205cf> Do not design content in a way that is known to cause seizures or physical reactions</span><ul class="text-gray-700 mt-5" data-v-4ec205cf><li data-v-4ec205cf> Some animations and moving content can also cause discomfort, nausea, and other physical reactions. Animated media must not auto-play for more than five seconds. If you plan to have animations go on longer than five seconds or play on an infinite loop, provide a way for users to pause the animation. An animation that cannot be paused can be extremely distracting for people with different types of cognitive disabilities </li></ul></div></section><input type="radio" name="accordion" id="cb4" data-v-4ec205cf><section class="box" data-v-4ec205cf><label class="box-title dark:text-slate-900" for="cb4" style="width:100%;" data-v-4ec205cf>Guideline 2.4 Navigation </label><label class="box-close" for="acc-close" data-v-4ec205cf></label><div class="box-content m-2" data-v-4ec205cf><span class="text-gray-700" data-v-4ec205cf> Provide ways to help users navigate, find content, and determine where they are</span><ul class="text-gray-700 mt-5" data-v-4ec205cf><li data-v-4ec205cf>Navigate is by using page titles</li><li data-v-4ec205cf> Adding headings and labels to your content. This is about separating large blocks of content, such as long text passages, into smaller ones and adding headings to each. Or dividing long forms into a series of smaller ones. This does not only support more effective navigation but should also make your content easier to understand and use, as we will learn later on. </li></ul></div></section><input type="radio" name="accordion" id="cb5" data-v-4ec205cf><section class="box" data-v-4ec205cf><label class="box-title dark:text-slate-900" for="cb5" style="width:100%;" data-v-4ec205cf>Guideline 2.5 Input</label><label class="box-close" for="acc-close" data-v-4ec205cf></label><div class="box-content m-2" data-v-4ec205cf><span class="text-gray-700" data-v-4ec205cf> Make it easier for users to operate functionality through various inputs beyond keyboard</span><ul class="text-gray-700 mt-5" data-v-4ec205cf><li data-v-4ec205cf> Generally, providing larger click-areas around buttons, links, and other controls helps people with low dexterity using a mouse as well as touch screens. </li></ul></div></section><input type="radio" name="accordion" id="acc-close" data-v-4ec205cf></nav></div></div>',2),l=[i];function n(d,r){return a(),t("div",s,l)}const b=e(o,[["render",n],["__scopeId","data-v-4ec205cf"]]);export{b as default};
